@{
    ViewData["Title"] = "Advanced Analytics";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="mb-1">Advanced Security Analytics</h1>
            <p class="text-muted mb-0">Deep dive into security metrics and threat intelligence</p>
        </div>
        <div class="d-flex gap-2">
            <button class="btn btn-outline-success" onclick="exportReport('json')">
                <i class="fas fa-download me-1"></i>Export JSON
            </button>
            <button class="btn btn-outline-info" onclick="exportReport('csv')">
                <i class="fas fa-file-csv me-1"></i>Export CSV
            </button>
        </div>
    </div>

    <!-- Real-time Metrics -->
    <div class="row g-3 mb-4">
        <div class="col-md-3">
            <div class="card bg-primary text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h6 class="card-title">Events (24h)</h6>
                            <h3 id="events24h">-</h3>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-clock fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-danger text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h6 class="card-title">Threats (24h)</h6>
                            <h3 id="threats24h">-</h3>
                        </div>
                        <div class="align-self-center">
                            <i class="fa-solid fa-shield-virus fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-success text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h6 class="card-title">Detection Rate</h6>
                            <h3 id="detectionRate">-</h3>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-percentage fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-warning text-dark">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h6 class="card-title">Avg Events/Day</h6>
                            <h3 id="avgEventsPerDay">-</h3>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-chart-line fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Advanced Charts -->
    <div class="row g-4 mb-4">
        <div class="col-lg-8">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0"><i class="fas fa-chart-line me-2"></i>Attack Trends (Last 30 Days)</h5>
                    <div class="btn-group btn-group-sm">
                        <button type="button" class="btn btn-outline-primary" onclick="loadAttackTrends()">Refresh</button>
                    </div>
                </div>
                <div class="card-body">
                    <canvas id="attackTrendsChart" height="300"></canvas>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0"><i class="fas fa-chart-pie me-2"></i>Top Attack Types</h5>
                </div>
                <div class="card-body">
                    <canvas id="topAttackTypesChart" height="300"></canvas>
                </div>
            </div>
        </div>
    </div>

    <div class="row g-4 mb-4">
        <div class="col-lg-6">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0"><i class="fas fa-globe me-2"></i>Geographic Distribution</h5>
                </div>
                <div class="card-body">
                    <div id="geographicData">
                        <p class="text-muted text-center">Loading geographic data...</p>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0"><i class="fas fa-exclamation-triangle me-2"></i>Top Threats</h5>
                </div>
                <div class="card-body">
                    <div id="topThreats">
                        <p class="text-muted text-center">Loading top threats...</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Performance Metrics -->
    <div class="row g-4 mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0"><i class="fas fa-tachometer-alt me-2"></i>Performance Metrics</h5>
                </div>
                <div class="card-body">
                    <div class="row g-3">
                        <div class="col-md-3">
                            <div class="text-center">
                                <h4 id="peakHour">-</h4>
                                <p class="text-muted">Peak Activity Hour</p>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="text-center">
                                <h4 id="mostCommonAttack">-</h4>
                                <p class="text-muted">Most Common Attack</p>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="text-center">
                                <h4 id="falsePositiveRate">-</h4>
                                <p class="text-muted">False Positive Rate</p>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="text-center">
                                <h4 id="lastUpdate">-</h4>
                                <p class="text-muted">Last Update</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let attackTrendsChart, topAttackTypesChart;

        // Initialize charts and load data
        document.addEventListener('DOMContentLoaded', function() {
            initializeCharts();
            loadRealTimeData();
            loadAttackTrends();
            loadGeographicData();
            loadTopThreats();
            loadPerformanceMetrics();
            
            // Refresh data every 30 seconds
            setInterval(loadRealTimeData, 30000);
        });

        function initializeCharts() {
            // Attack Trends Chart
            const attackTrendsCtx = document.getElementById('attackTrendsChart').getContext('2d');
            attackTrendsChart = new Chart(attackTrendsCtx, {
                type: 'line',
                data: {
                    labels: [],
                    datasets: []
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'top'
                        },
                        title: {
                            display: true,
                            text: 'Attack Trends Over Time'
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });

            // Top Attack Types Chart
            const topAttackTypesCtx = document.getElementById('topAttackTypesChart').getContext('2d');
            topAttackTypesChart = new Chart(topAttackTypesCtx, {
                type: 'doughnut',
                data: {
                    labels: [],
                    datasets: [{
                        data: [],
                        backgroundColor: [
                            '#007bff', '#dc3545', '#ffc107', '#28a745', '#17a2b8', '#6c757d'
                        ]
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'bottom'
                        }
                    }
                }
            });
        }

        async function loadRealTimeData() {
            try {
                const response = await fetch('/Analytics/GetRealTimeData');
                const data = await response.json();
                
                document.getElementById('events24h').textContent = data.totalEvents;
                document.getElementById('threats24h').textContent = data.severityDistribution.High + data.severityDistribution.Critical;
                document.getElementById('lastUpdate').textContent = new Date(data.lastUpdate).toLocaleTimeString();
                
                // Update top attack types chart
                updateTopAttackTypesChart(data.topAttackTypes);
            } catch (error) {
                console.error('Error loading real-time data:', error);
            }
        }

        async function loadAttackTrends() {
            try {
                const response = await fetch('/Analytics/GetAttackTrends');
                const data = await response.json();
                
                updateAttackTrendsChart(data);
            } catch (error) {
                console.error('Error loading attack trends:', error);
            }
        }

        async function loadGeographicData() {
            try {
                const response = await fetch('/Analytics/GetGeographicData');
                const data = await response.json();
                
                const container = document.getElementById('geographicData');
                container.innerHTML = `
                    <div class="table-responsive">
                        <table class="table table-sm">
                            <thead>
                                <tr>
                                    <th>IP Address</th>
                                    <th>Count</th>
                                    <th>Location</th>
                                </tr>
                            </thead>
                            <tbody>
                                ${data.map(item => `
                                    <tr>
                                        <td><code>${item.ip}</code></td>
                                        <td><span class="badge bg-primary">${item.count}</span></td>
                                        <td>${item.country}, ${item.city}</td>
                                    </tr>
                                `).join('')}
                            </tbody>
                        </table>
                    </div>
                `;
            } catch (error) {
                console.error('Error loading geographic data:', error);
            }
        }

        async function loadTopThreats() {
            try {
                const response = await fetch('/Analytics/GetTopThreats?limit=10');
                const data = await response.json();
                
                const container = document.getElementById('topThreats');
                container.innerHTML = `
                    <div class="table-responsive">
                        <table class="table table-sm">
                            <thead>
                                <tr>
                                    <th>Event Type</th>
                                    <th>Source IP</th>
                                    <th>Count</th>
                                    <th>Severity</th>
                                </tr>
                            </thead>
                            <tbody>
                                ${data.map(item => `
                                    <tr>
                                        <td>${item.eventType}</td>
                                        <td><code>${item.sourceIp}</code></td>
                                        <td><span class="badge bg-danger">${item.count}</span></td>
                                        <td><span class="badge bg-${item.severity === 'Critical' ? 'dark' : 'warning'}">${item.severity}</span></td>
                                    </tr>
                                `).join('')}
                            </tbody>
                        </table>
                    </div>
                `;
            } catch (error) {
                console.error('Error loading top threats:', error);
            }
        }

        async function loadPerformanceMetrics() {
            try {
                const response = await fetch('/Analytics/GetPerformanceMetrics');
                const data = await response.json();
                
                document.getElementById('avgEventsPerDay').textContent = Math.round(data.averageEventsPerDay);
                document.getElementById('peakHour').textContent = data.peakHour + ':00';
                document.getElementById('mostCommonAttack').textContent = data.mostCommonAttack;
                document.getElementById('detectionRate').textContent = Math.round(data.detectionRate) + '%';
                document.getElementById('falsePositiveRate').textContent = Math.round(data.falsePositiveRate) + '%';
            } catch (error) {
                console.error('Error loading performance metrics:', error);
            }
        }

        function updateAttackTrendsChart(data) {
            const labels = data.map(item => item.date);
            const datasets = [
                {
                    label: 'Total Events',
                    data: data.map(item => item.totalEvents),
                    borderColor: '#007bff',
                    backgroundColor: 'rgba(0, 123, 255, 0.1)',
                    tension: 0.4
                },
                {
                    label: 'Port Scan',
                    data: data.map(item => item.portScan),
                    borderColor: '#dc3545',
                    backgroundColor: 'rgba(220, 53, 69, 0.1)',
                    tension: 0.4
                },
                {
                    label: 'Brute Force',
                    data: data.map(item => item.bruteForce),
                    borderColor: '#ffc107',
                    backgroundColor: 'rgba(255, 193, 7, 0.1)',
                    tension: 0.4
                },
                {
                    label: 'DDoS',
                    data: data.map(item => item.ddos),
                    borderColor: '#28a745',
                    backgroundColor: 'rgba(40, 167, 69, 0.1)',
                    tension: 0.4
                }
            ];

            attackTrendsChart.data.labels = labels;
            attackTrendsChart.data.datasets = datasets;
            attackTrendsChart.update();
        }

        function updateTopAttackTypesChart(data) {
            const labels = Object.keys(data);
            const values = Object.values(data);

            topAttackTypesChart.data.labels = labels;
            topAttackTypesChart.data.datasets[0].data = values;
            topAttackTypesChart.update();
        }

        function exportReport(format) {
            const startDate = new Date();
            startDate.setMonth(startDate.getMonth() - 1);
            
            const url = `/Analytics/ExportReport?startDate=${startDate.toISOString().split('T')[0]}&endDate=${new Date().toISOString().split('T')[0]}&format=${format}`;
            window.open(url, '_blank');
        }
    </script>
} 